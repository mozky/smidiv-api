swagger: "2.0"
info:
  version: "0.0.1"
  title: SMIDIV API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
# basic authentication definition
securityDefinitions:
  basicAuth:
    type: basic
  tokenAuth:
    type: apiKey
    in: header
    name: X-API-KEY
paths:
  /health:
    x-swagger-router-controller: system
    get:
      description: Returns the status of the application
      operationId: health
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SystemHealthResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    x-swagger-router-controller: account
    post:
      description: Route to login into the system
      operationId: login
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/LoginRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AuthenticationResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /mail:
    x-swagger-router-controller: mail
    post:
      summary: envia mail al correo del usuario
      description: Envia correo
      operationId: sendCorreo
      parameters:
      - name: user
        in: body
        required: true
        schema:
          $ref: "#/definitions/CorreoRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /OBD/{vehiculo}:
    x-swagger-router-controller: obd
    get:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Gets the user description for a given username
      operationId: getOBD
      parameters:
        - name: vehiculo
          in: path
          description: The unique username of the user to get the data
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
  /OBD:
    x-swagger-router-controller: obd
    post:
      description: agregar informacion OBD2
      operationId: addOBD
      parameters:
        - name: obd
          in: body
          required: true
          schema:
            $ref: "#/definitions/OBD"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /ubicacionFav/{usuario}:
    x-swagger-router-controller: ubicacionFav
    get:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Gets the ubications description for a given username
      operationId: getUbicacionFav
      parameters:
        - name: usuario
          in: path
          description: The unique username of the user to get the data
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /ubicacionFav:
    x-swagger-router-controller: ubicacionFav
    post:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: añadir Ubicacion
      operationId: addUbicacionFav
      parameters:
        - name: ubicacionFav
          in: body
          required: true
          schema:
            $ref: "#/definitions/UbicacionFav"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Editar una Ubicacion
      operationId: updateUbicacionFav
      parameters:
        - name: ubicacionFav
          in: body
          required: true
          schema:
            $ref: "#/definitions/UbicacionFavUpdate"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Deletes the given ubicacion favorita
      operationId: deleteUbicacionFav
      parameters:
        - name: ubicacionFav
          in: body
          description: The ubication to get deleted
          required: true
          schema:
            $ref: "#/definitions/UbicacionFavUpdate"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/StringResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /ubicacion:
    x-swagger-router-controller: ubicacion
    get:
      description: Obtener ubicacion
      operationId: getUbicacion      
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: añadir Ubicacion
      operationId: addUbicacion
      parameters:
        - name: ubicacion
          in: body
          required: true
          schema:
            $ref: "#/definitions/Ubicacion"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
  /ubicacion/{vehiculo}:
    x-swagger-router-controller: ubicacion
    get:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Gets the user description for a given username
      operationId: getUbicaciones
      parameters:
        - name: vehiculo
          in: path
          description: The unique username of the user to get the data
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /clave:
    x-swagger-router-controller: SMIDIVID
    get:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: gets the marcaList
      operationId: getClave
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      # require basic authentication on this route
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Adds a new marca
      operationId: addClave
      parameters:
        - name: smidivid
          description: New Marca's information
          in: body
          required: true
          schema:
            $ref: "#/definitions/SMIDIVID"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /brand:
    x-swagger-router-controller: marca
    get:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: gets the marcaList
      operationId: getMarcaList
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      # require basic authentication on this route
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Adds a new marca
      operationId: addMarca
      parameters:
        - name: marca
          description: New Marca's information
          in: body
          required: true
          schema:
            $ref: "#/definitions/Marca"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    
  /vehicle:
    # our controller name
    x-swagger-router-controller: vehiculo
    get:
      # require basic authentication on this route
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Gets the vehicles list
      operationId: getVehiclesList
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      # require basic authentication on this route
      security:
        - basicAuth: []
        - tokenAuth: []
      description: adds a new Vehiculo
      operationId: addVehiculo
      parameters:
        - name: vehiculo
          description: New Vehiculo definition
          in: body
          required: true
          schema:
            $ref: "#/definitions/Vehiculo"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /alarma:
    x-swagger-router-controller: alarma
    get:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Obtener alarma
      operationId: getAlarma
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      security:
      - basicAuth: []
      - tokenAuth: []
      description: Ingresar una alalarma 
      operationId: addAlarma
      parameters:
        - name: alarma
          description: Agregar nueva alarma
          in: body
          required: true
          schema:
            $ref: "#/definitions/Alarma"
      responses:
        "200":
          description:  Success
          schema:
            $ref: "#/definitions/OkResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
  /user:
    # our controller name
    x-swagger-router-controller: user
    get:
      # require basic authentication on this route
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Gets the users list
      operationId: getUsersList
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Adds a new user
      operationId: addUser
      parameters:
        - name: user
          description: New user's information
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AuthenticationResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/{username}:
    # our controller name
    x-swagger-router-controller: user
    patch:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Updates a user by username
      operationId: updateUser
      parameters:
        - in: path
          name: username
          type: string
          required: true
          description: Username of the user to update
        - name: updates
          description: User updates
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserUpdates"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/StringResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Gets the user description for a given username
      operationId: getUser
      parameters:
        - name: username
          in: path
          description: The unique username of the user to get the data
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      security:
        - basicAuth: []
        - tokenAuth: []
      description: Deletes the user for the given username
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The unique username of the user to delete
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/StringResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  SystemHealthResponse:
    type: object
    properties:
      database:
        type: number
        description: returns the database status
      systemTime:
        type: string
        format: date-time
        description: System local time
      status:
        type: string
        description: Status of the application
  LoginRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
        format: password
    required:
      - username
      - password
  CorreoRequest:
    type: object
    properties:
      username:
        type: string
    required:
    - username
  AuthenticationResponse:
    required:
      - success
      - message
      - token
    properties:
      success:
        type: boolean
      message:
        type: string
      token:
        type: string
  GetUsersListResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items:
          type: object
          properties:
            username:
              type: string
  Marca:
    type: object
    properties:
      nombre: 
        type: string
  Vehiculo:
    type: object
    properties:
      username:
        type: string
        description: vehicle's owner
      marca:
        type: string
        description: vehicle's brand
      modelo:
        type: string
        description: vehicle's model
      smidivID:
        type: string
      placas:
        type: string
    required:
      - username
  SMIDIVID:
    type: object
    properties:
      clave: 
        type: string
        description: Clave de identificacion SMIDIV
    required:
      - clave
  Alarma:
    type: object
    properties:
      username:
        type: string
        description: Alarma's owner
      vehiculo:
        type: string
        description: Alarma's vehiculo
      ubicacionfav:
        type: string
        description: Alarma's ubicacion
      estado:
        type: string
        description: Estado de la alarma
      rangoDistancia:
        type: object
        properties:
          rango: 
            type: integer
      rangoHorario:
        type: object
        properties:
          inicio: 
            type: string
          fin:
            type: string
      fechaCreacion:
        type: string
      fechaActualizacion:
        type: string
  
  Ubicacion:
    type: object
    properties:
      smidivID:
        type: string
        description: Ubicacion ligada al automovil
      ubicacion:
        type: object
        properties:
          lat:
            type: number
          lng: 
            type: number
      fechaCreacion:
        type: string
    required:
    - smidivID
  UbicacionFav:
    type: object
    properties:
      idUsuario:
        type: string
        description: Ubicacion ligada al automovil
      nombre:
        type: string
        description: nombre de la ubicacion
      ubicacion:
        type: object
        properties:
          lat:
            type: number
          lng: 
            type: number
      fechaCreacion:
        type: string
        format: date
      fechaActualizacion:
        type: string
        format: date
    required:
    - idUsuario
    - nombre
    - ubicacion
  UbicacionFavUpdate:
    type: object
    properties:
      idUbicacion:
        type: string
        description: Ubicacion ligada al automovil
      nombre:
        type: string
        description: nombre de la ubicacion
      ubicacion:
        type: object
        properties:
          lat:
            type: number
          lng: 
            type: number
    required:
    - idUbicacion
  User:
    type: object
    properties:
      username:
        type: string
        description: user's unique username
      email:
        type: string
        description: user's email
      password:
        type: string
        format: password
      records:
        type: array
        items:
          type: object
    required:
      - username
      - email
      - password
  UserUpdates:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
        format: password
      email:
        type: string
      profile:
        type: object
  StringResponse:
    required:
      - message
    properties:
      message:
        type: string
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  OBD:
    type: object
    properties:
      smidivID:
        type: string
      tipo:
        type: string
      valor:
        type: string
    required:
      - smidivID
  GetUserResponse:
    properties:
      user:
        type: object
        properties:
          _id:
            type: string
          username:
            type: string
          email:
            type: string
          profile:
            type: object
          routines:
            type: array
            items:
              type: object
          records:
            type: array
            items:
              type: object
    required:
      - user
  OkResponse:
    required:
      - response
      - success
    properties:
      response:
        type: object
        properties: {}
      success:
        type: boolean
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
